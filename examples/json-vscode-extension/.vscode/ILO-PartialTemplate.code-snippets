{
	// Place your completions-sample workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: matchingClass
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create New ILO-instance": {
		"prefix": "Example ILO-template",
		"body": [
			"resources:",
"- name: Users",
"  subtitle: Users of the system",
"  color: Gray",
"  style: plural",
"  icon: Networking/user.svg",
"  abstract: true",
"\n",  
"$LINE_COMMENT default schema classes",  
"- name: System",
"  abstract: true",
"  icon: AWS/Business Apps/Business-Applications.svg",
"- name: Component",
"  abstract: true",
"  icon: AWS/IoT/IoT_Generic.svg",
"- name: Capability",
"  abstract: true",
"  icon: AWS/IoT/IoT_Action.svg",
"- name: ComponentSolution",
"  abstract: true",
"  subtitle: Solution Structure",
"  color: navy",
"- name: TechnicalStandard",
"  abstract: true",
"- name: Requirement",
"  abstract: true",
"\n",
"$LINE_COMMENT instances",
"- name: System_1",
"  instanceOf: System",
"\n",
"\n",
"- name: ComponentSolution_0",
"  instanceOf: ComponentSolution",
"  children: ",
"  - name: Component_1",
"    instanceOf: Component",
"  - name: Component_",
"    instanceOf: Component",
"\n",  
"- name: IEC_62443-4-2",
"  instanceOf: TechnicalStandard",
"  children:",
"  - name: CR1.1",
"    instanceOf: Requirement",
"    description: |- ",
"      Human user identification and authentication",
"  - name: CR1.2",
"    instanceOf: Requirement",
"  - name: CR1.3",
"    instanceOf: Requirement",
"\n",    
"- name: Capability_1",
"  instanceOf: Capability",
"  description: |-",
"    Authentication of human user.",
"- name: Capability_2",
"  instanceOf: Capability",
"  description: |- ",
"    Identification of human user.",
"- name: Capability_3",
"  instanceOf: Capability",
"\n",    
"\n",    
"\n",
"perspectives:",
"- name: System",
"  color: royalblue",
"  relations:",
"  - from: System_1",
"    to: ComponentSolution_0",
"    label: has Component Solution",
"  - from: Component_1",
"    to: Capability_1,Capability_2",
"    label: has Capability",
"  - from: Component_2",
"    to: Capability_2",
"    label: has Capability",
"\n",
"- name: Publication",
"  color: Salmon",
"  relations: ",
"  - from: IEC_62443-4-2",
"    to: CR1.1, CR1.2, CR1.3",
"    label: contains",
"  - from: CR1.1",
"    to: Capability_1,Capability_2",
"    label: demands capability",
"  - from: CR1.2",
"    to: Capability_2",
"    label: demands capability",
"  - from: CR1.3",
"    to: Capability_3,Capability_1",
"    label: demands capability",
"- name: Overview",
"  extends: System,Publication",
"\n",    
"  $LINE_COMMENT Add 'relations' or 'sequence' here"

		],
		"description": "Creates a simple template of an ILOgraph document file."
	}
	//# ILO Resources
	//# Resources define the classes and elements that a diagram models.
	//# A resource is defined only once in an Ilograph diagram, it can appear in multiple perspectives
	//# default schema classes  
	//# default schema instances
	//# ILO perspectives
	//# Perspectives provides a unique way to look at the resources in a diagram and the relations between them 
	//# default relations    
}